{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/config.js","webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["// DOM узлы\r\nconst profileElementList = {\r\n  'name' : document.querySelector('.profile__title'),\r\n  'description' : document.querySelector('.profile__description'),\r\n  'avatar' : document.querySelector('.profile__image'),\r\n  'button' : document.querySelector('.profile__edit-button'),\r\n  'popups' : {\r\n    'editInfo' : document.querySelector('.popup_type_edit'),\r\n    'changeAvatar' : document.querySelector('.popup_type_сhange-avatar')\r\n  },\r\n  'forms' : {\r\n    'editInfo' : document.forms['edit-profile'],\r\n    'changeAvatar' : document.forms['change-avatar']\r\n  },\r\n  'inputs' : {\r\n    'name' : document.querySelector('.popup__input_type_name'),\r\n    'job' : document.querySelector('.popup__input_type_description'),\r\n    'urlAvatar' : document.querySelector('.popup__input_type_url-avatar')\r\n  }\r\n};\r\nconst cardElementList = {\r\n  'conteiner' : document.querySelector('.places__list'),\r\n  'button' : document.querySelector('.profile__add-button'),\r\n  'popupNewCard' : document.querySelector('.popup_type_new-card'),\r\n  'popupImage' : {\r\n    'container' : document.querySelector('.popup_type_image'),\r\n    'image' : document.querySelector('.popup__image'),\r\n    'title' : document.querySelector('.popup__caption')\r\n  },\r\n  'form' : document.forms['new-place'], \r\n  'inputs' : {\r\n    'name' : document.querySelector('.popup__input_type_card-name'),\r\n    'url' : document.querySelector('.popup__input_type_url')\r\n  }\r\n};\r\n\r\n// Настройки валидации\r\nconst validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n};\r\n\r\n// id пользователя\r\nconst myId = '';\r\n\r\n// Объект экспорта\r\nexport const config = {\r\n  profile: profileElementList,\r\n  card: cardElementList,\r\n  validation: validationConfig,\r\n  myId\r\n}","// Шаблон карточки\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\n\r\n// функция установки отображения карточки для заданного юзера\r\nconst setStateCardForUser = (cardElement, cardData, userId) => {\r\n  const delButton = cardElement.querySelector('.card__delete-button');\r\n  const likeButton = cardElement.querySelector('.card__like-button');\r\n  const isMyPost = cardData.owner._id === userId;\r\n  const hasLike = cardData.likes.some((likeUser) => {\r\n    return likeUser._id === userId;\r\n  });\r\n\r\n  if (hasLike) {\r\n    likeCard(likeButton);\r\n  };\r\n\r\n  if (!isMyPost) {\r\n    delButton.remove();\r\n  }\r\n};\r\n\r\n\r\n// Функция создания карточки\r\nexport const createCard = (dataCard, ownerId, callbacks) => {\r\n  const cardElement = cardTemplate.querySelector('.card').cloneNode(true);\r\n  const delButton = cardElement.querySelector('.card__delete-button');\r\n  const likeButton = cardElement.querySelector('.card__like-button');\r\n  const image = cardElement.querySelector('.card__image');\r\n  const title = cardElement.querySelector('.card__title');\r\n\r\n  image.src = dataCard.link;\r\n  image.alt = dataCard.name;\r\n  title.textContent = dataCard.name;\r\n  likeButton.textContent = dataCard.likes.length;\r\n\r\n  setStateCardForUser(cardElement, dataCard, ownerId);\r\n\r\n  delButton.addEventListener('click', (evt) => {\r\n    callbacks.deleteCard(evt, dataCard._id)\r\n  });\r\n  likeButton.addEventListener('click', (evt) => {\r\n    callbacks.likeCard(evt, dataCard._id);\r\n  });\r\n  image.addEventListener('click', () => {\r\n    callbacks.openImage(dataCard.link, dataCard.name);\r\n  });\r\n\r\n  return cardElement;\r\n};\r\n\r\n\r\n// Функция удаления карточки\r\nexport const deleteCard = (evt) => {\r\n  const cardItem = evt.target.closest('.card');\r\n  cardItem.remove();\r\n};\r\n\r\n\r\n// Функция лайка карточки\r\nexport const likeCard = (element) => {\r\n  element.classList.toggle('card__like-button_is-active');\r\n};\r\n\r\n// Функция проверки на наличие лайка\r\nexport const isLiked = (buttonElement) => {\r\n return buttonElement.classList.contains('card__like-button_is-active');\r\n};\r\n\r\n\r\n// Функция установки счетчика лайков\r\nexport const setLikeCount = (buttonElement, count) => {\r\n  buttonElement.textContent = count;\r\n};\r\n\r\n","// Функция обработчик закрытия модального окна \r\nconst handlerCloseModal = (evt, popup) => {\r\n  const isOverlay = evt.target.classList.contains('popup');\r\n  const isBtnClose = evt.target.classList.contains('popup__close');\r\n\r\n  if (isOverlay || isBtnClose) {\r\n    closePopup(popup);\r\n  } else {\r\n    evt.stopPropagation();\r\n  };\r\n};\r\n\r\n\r\n// Функция закрытия модального окна по ESC\r\nconst closeByEsc = (evt) => {\r\n  const isEscape = evt.key === 'Escape';\r\n\r\n  if (isEscape) {\r\n    const openedPopup = document.querySelector('.popup_is-opened');\r\n    closePopup(openedPopup);\r\n  }\r\n};\r\n\r\n\r\n// Функция открытия модального окна\r\nexport const openPopup = (popup) => {\r\n  document.addEventListener('keydown', closeByEsc);\r\n  popup.classList.add('popup_is-opened');\r\n};\r\n\r\n\r\n// Функция закрытия модального окна\r\nexport const closePopup = (popup) => {\r\n  document.removeEventListener('keydown', closeByEsc);\r\n  popup.classList.remove('popup_is-opened');\r\n};\r\n\r\nexport const setEventListenersModal = () => {\r\n  const modalList = Array.from(document.querySelectorAll('.popup'));\r\n\r\n  modalList.forEach((popup) => {\r\n    popup.addEventListener('click', (evt) => {\r\n      handlerCloseModal(evt, popup)\r\n    });\r\n  });\r\n}\r\n","\r\n\r\nconst showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n};\r\n\r\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n};\r\n\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n};\r\n\r\nexport const clearValidation = (formElement, validationConfig) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationConfig)\r\n  });\r\n};\r\n\r\nexport const enableValidation = (validationConfig) => {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n};\r\n","const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-24',\r\n  headers: {\r\n    authorization: '40811a44-55df-441d-9790-3adade90da82',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\n\r\nconst sendApiRequest = (path, method = 'GET', data = null) => {\r\n  const fetchConfig = {\r\n    method: method,\r\n    headers: config.headers\r\n  };\r\n  if (data) {\r\n    fetchConfig.body = JSON.stringify(data)\r\n  }\r\n\r\n  return fetch(config.baseUrl + path, fetchConfig)\r\n    .then(checkStatusRequest)\r\n};\r\n\r\n\r\nconst checkStatusRequest = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  } \r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\n\r\nconst checkMIMEType = (url) => {\r\n  return fetch(url, {method: 'HEAD'})\r\n    .then((res) => {\r\n      return res.headers.get('Content-Type').includes('image') && res.ok\r\n    })\r\n};\r\n\r\n\r\nexport const getUserData = () => {\r\n  return sendApiRequest('/users/me')\r\n};\r\n\r\nexport const getCardList = () => {\r\n  return sendApiRequest('/cards')\r\n};\r\n\r\nexport const changeProfileInfo = (name, about) => {\r\n  return sendApiRequest('/users/me', 'PATCH', {name, about});\r\n};\r\n\r\nexport const addNewCard = (name, link) => {\r\n  return sendApiRequest('/cards', 'POST', {name, link});\r\n};\r\n\r\nexport const deleteCard = (cardId) => {\r\n  return sendApiRequest(`/cards/${cardId}`, 'DELETE');\r\n};\r\n\r\nexport const setLikeCard = (cardId) => {\r\n  return sendApiRequest(`/cards/likes/${cardId}`, 'PUT');\r\n};\r\n\r\nexport const unsetLikeCard = (cardId) => {\r\n  return sendApiRequest(`/cards/likes/${cardId}`, 'DELETE');\r\n};\r\n\r\nexport const changeAvatar = (urlAvatar) => {\r\n  const body = {\r\n    avatar: urlAvatar\r\n  };\r\n  return checkMIMEType(urlAvatar)\r\n    .then((isImage) => {\r\n      if (isImage) {\r\n        return sendApiRequest(`/users/me/avatar`, 'PATCH', body);\r\n      }\r\n      return Promise.reject(`Ошибка: по ссылке нет картинки!`);\r\n    })\r\n};\r\n\r\n","import './pages/index.css';\r\nimport { config } from './scripts/config';\r\nimport * as card from './scripts/card';\r\nimport * as modal from './scripts/modal';\r\nimport * as validation from './scripts/validation';\r\nimport * as api from './scripts/api';\r\n\r\n\r\n// Функция открытия картинки карточки\r\nconst openImage = (link, name) => {\r\n  config.card.popupImage.image.src = link;\r\n  config.card.popupImage.image.alt = name;\r\n  config.card.popupImage.title.textContent = name;\r\n\r\n  modal.openPopup(config.card.popupImage.container);\r\n};\r\n\r\n// Функция удаления карточки\r\nconst deleteCard = (deledeteButton, idCard) => {\r\n  api.deleteCard(idCard)\r\n  .then(() => {\r\n    card.deleteCard(deledeteButton);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err)\r\n  })\r\n};\r\n\r\n// функция лайка карточки\r\nconst likeCard = (evt, idCard) => {\r\n  const buttonElement = evt.target;\r\n\r\n  if (card.isLiked(buttonElement)) {\r\n    api.unsetLikeCard(idCard)\r\n      .then((cardData) => {\r\n        card.setLikeCount(buttonElement, cardData.likes.length);\r\n        card.likeCard(buttonElement);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  } else {\r\n    api.setLikeCard(idCard)\r\n      .then((cardData) => {\r\n        card.setLikeCount(buttonElement, cardData.likes.length);\r\n        card.likeCard(buttonElement);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  };\r\n};\r\n\r\n\r\n// Обработчик открытия формы редактирования профиля\r\nfunction handlerOpenProfile() {\r\n  validation.clearValidation(config.profile.forms.editInfo, config.validation);\r\n  config.profile.inputs.name.value = config.profile.name.textContent;\r\n  config.profile.inputs.job.value = config.profile.description.textContent;\r\n  modal.openPopup(config.profile.popups.editInfo);\r\n};\r\n\r\n\r\n// Обработчик изменения профиля\r\nfunction handlerChangeProfile(evt) {\r\n  evt.preventDefault();\r\n\r\n  const buttonElement = evt.submitter;\r\n  buttonElement.textContent = 'Сохранение...';\r\n  buttonElement.disabled = true;\r\n  api.changeProfileInfo(config.profile.inputs.name.value, config.profile.inputs.job.value)\r\n    .then((userData) => {\r\n      config.profile.name.textContent = userData.name;\r\n      config.profile.description.textContent = userData.about;\r\n\r\n      modal.closePopup(config.profile.popups.editInfo);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n    .finally(() => {\r\n        buttonElement.disabled = false;\r\n        buttonElement.textContent = 'Сохранить';\r\n      }\r\n    )\r\n};\r\n\r\n\r\n// Обработчик открытия формы добавление карточки\r\nfunction handlerOpenFormCard() {\r\n  validation.clearValidation(config.card.form, config.validation)\r\n  modal.openPopup(config.card.popupNewCard);\r\n};\r\n\r\n\r\n// Обработчик добавление карточки\r\nfunction handlerAddCard(evt) {\r\n  evt.preventDefault();\r\n\r\n  const buttonElement = evt.submitter;\r\n  buttonElement.textContent = 'Сохранение...';\r\n  buttonElement.disabled = true;\r\n  api.addNewCard(config.card.inputs.name.value, config.card.inputs.url.value)\r\n    .then((cardData) => {\r\n      const cardElement = card.createCard(cardData, config.myId, {deleteCard, likeCard, openImage});\r\n      config.card.conteiner.prepend(cardElement);\r\n      config.card.inputs.name.value = '';\r\n      config.card.inputs.url.value = '';\r\n      modal.closePopup(config.card.popupNewCard);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n    .finally(() => {\r\n      buttonElement.disabled = false;\r\n      buttonElement.textContent = 'Сохранить';\r\n    }\r\n  ) \r\n};\r\n\r\n\r\n// Обработчик открытия формы смена аватара\r\nconst handlerOpenFormAvatar = () => {\r\n  config.profile.inputs.urlAvatar.value = '';\r\n  validation.clearValidation(config.profile.forms.changeAvatar, config.validation);\r\n  modal.openPopup(config.profile.popups.changeAvatar);\r\n};\r\n\r\n\r\n// Обработчик смены аватара\r\nconst handlerChangeAvatar = (evt) => {\r\n  evt.preventDefault();\r\n\r\n  const buttonElement = evt.submitter;\r\n  buttonElement.textContent = 'Сохранение...';\r\n  buttonElement.disabled = true;\r\n  api.changeAvatar(config.profile.inputs.urlAvatar.value)\r\n    .then((data) => {\r\n      config.profile.avatar.style = `background-image: url(${data.avatar})`;\r\n      modal.closePopup(config.profile.popups.changeAvatar);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n    .finally(() => {\r\n      buttonElement.disabled = false;\r\n      buttonElement.textContent = 'Сохранить';\r\n    }\r\n  )\r\n};\r\n\r\n\r\n// Добавление слушателей\r\nconfig.profile.button.addEventListener('click', handlerOpenProfile);\r\nconfig.card.button.addEventListener('click', handlerOpenFormCard);\r\nconfig.profile.avatar.addEventListener('click', handlerOpenFormAvatar);\r\nconfig.profile.forms.editInfo.addEventListener('submit', handlerChangeProfile); \r\nconfig.card.form.addEventListener('submit', handlerAddCard);\r\nconfig.profile.forms.changeAvatar.addEventListener('submit', handlerChangeAvatar);\r\n \r\n// добавление слушателей для модальных окон\r\nmodal.setEventListenersModal();\r\n\r\n// Включение валидации\r\nvalidation.enableValidation(config.validation); \r\n\r\n\r\n// Функция загрузки данных на страницу\r\nconst initializationPage = () => {\r\n  Promise.all([api.getUserData(), api.getCardList()])\r\n  .then(([userData, cardList]) => {\r\n    config.profile.name.textContent = userData.name;\r\n    config.profile.description.textContent = userData.about;\r\n    config.profile.avatar.style = `background-image: url(${userData.avatar})`;\r\n    config.myId = userData._id\r\n\r\n    cardList.forEach((cardData) => {\r\n      const cardElement = card.createCard(cardData, config.myId, {deleteCard, likeCard, openImage}); \r\n      config.card.conteiner.append(cardElement);\r\n    })\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  })\r\n};\r\n\r\ninitializationPage();"],"names":["config","profile","document","querySelector","forms","card","validation","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","myId","cardTemplate","content","createCard","dataCard","ownerId","callbacks","cardElement","cloneNode","delButton","likeButton","image","title","src","link","alt","name","textContent","likes","length","cardData","userId","isMyPost","owner","_id","some","likeUser","likeCard","remove","setStateCardForUser","addEventListener","evt","deleteCard","openImage","element","classList","toggle","setLikeCount","buttonElement","count","closeByEsc","key","openedPopup","closePopup","openPopup","popup","add","removeEventListener","hideInputError","formElement","inputElement","validationConfig","errorElement","concat","id","toggleButtonState","inputList","validity","valid","hasInvalidInput","disabled","clearValidation","Array","from","querySelectorAll","forEach","baseUrl","headers","authorization","sendApiRequest","path","data","arguments","undefined","fetchConfig","method","body","JSON","stringify","fetch","then","checkStatusRequest","res","ok","json","Promise","reject","status","popupImage","modal","container","deledeteButton","idCard","cardId","target","closest","catch","err","console","log","contains","api","button","editInfo","inputs","value","job","description","popups","form","popupNewCard","avatar","urlAvatar","changeAvatar","preventDefault","about","submitter","userData","finally","url","conteiner","prepend","get","includes","isImage","style","isOverlay","isBtnClose","stopPropagation","handlerCloseModal","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","all","_ref","_ref2","cardList","append"],"sourceRoot":""}