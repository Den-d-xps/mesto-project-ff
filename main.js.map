{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/config.js","webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["// DOM узлы\r\nconst profileElementList = {\r\n  'name' : document.querySelector('.profile__title'),\r\n  'description' : document.querySelector('.profile__description'),\r\n  'avatar' : document.querySelector('.profile__image'),\r\n  'button' : document.querySelector('.profile__edit-button'),\r\n  'popups' : {\r\n    'editInfo' : document.querySelector('.popup_type_edit'),\r\n    'changeAvatar' : document.querySelector('.popup_type_сhange-avatar')\r\n  },\r\n  'forms' : {\r\n    'editInfo' : document.forms['edit-profile'],\r\n    'changeAvatar' : document.forms['change-avatar']\r\n  },\r\n  'inputs' : {\r\n    'name' : document.querySelector('.popup__input_type_name'),\r\n    'job' : document.querySelector('.popup__input_type_description'),\r\n    'urlAvatar' : document.querySelector('.popup__input_type_url-avatar')\r\n  }\r\n};\r\nconst cardElementList = {\r\n  'conteiner' : document.querySelector('.places__list'),\r\n  'button' : document.querySelector('.profile__add-button'),\r\n  'popup' : document.querySelector('.popup_type_new-card'),\r\n  'form' : document.forms['new-place'], \r\n  'inputs' : {\r\n    'name' : document.querySelector('.popup__input_type_card-name'),\r\n    'url' : document.querySelector('.popup__input_type_url')\r\n  }\r\n};\r\n\r\n// Настройки валидации\r\nconst validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n};\r\n\r\n// Объект экспорта\r\nexport const config = {\r\n  profile: profileElementList,\r\n  card: cardElementList,\r\n  validation: validationConfig\r\n}","// Шаблон карточки\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\n\r\n\r\n\r\n// Функция создания карточки\r\nconst createCard = (data, callbacks) => {\r\n  const cardElement = cardTemplate.querySelector('.card').cloneNode(true);\r\n  const delButton = cardElement.querySelector('.card__delete-button');\r\n  const likeButton = cardElement.querySelector('.card__like-button');\r\n  const image = cardElement.querySelector('.card__image');\r\n  const title = cardElement.querySelector('.card__title');\r\n\r\n  image.src = data.link;\r\n  title.textContent = data.name;\r\n  likeButton.textContent = data.likes.length;\r\n\r\n\r\n  delButton.addEventListener('click', (evt) => {\r\n    callbacks.deleteCard(evt, data._id)\r\n  });\r\n  likeButton.addEventListener('click', (evt) => {\r\n    callbacks.likeCard(evt, data._id);\r\n  });\r\n  image.addEventListener('click', () => {\r\n    callbacks.openImage(data.link, data.name);\r\n  });\r\n\r\n  return cardElement;\r\n};\r\n\r\n\r\n// Функция удаления карточки\r\nconst deleteCard = (evt) => {\r\n  const cardItem = evt.target.closest('.card');\r\n  cardItem.remove();\r\n};\r\n\r\n\r\n// Функция лайка карточки\r\nconst likeCard = (element) => {\r\n  element.classList.toggle('card__like-button_is-active');\r\n};\r\n\r\n\r\n// Объект экспорта\r\nexport const card = {\r\n  create: createCard,\r\n  delete: deleteCard,\r\n  like: likeCard  \r\n}\r\n","// Функция обработчик закрытия модального окна \r\nconst handlerCloseModal = (evt) => {\r\n  const openedPopup = document.querySelector('.popup_is-opened');\r\n  const isOverlay = evt.target.classList.contains('popup');\r\n  const isBtnClose = evt.target.classList.contains('popup__close');\r\n  const isEscape = evt.key === 'Escape';\r\n\r\n  if (isOverlay || isBtnClose || isEscape) {\r\n    closePopup(openedPopup);\r\n  } else {\r\n    evt.stopPropagation();\r\n  };\r\n};\r\n\r\n\r\n// Функция открытия модального окна\r\nconst openPopup = (popup) => {\r\n  popup.classList.add('popup_is-opened');\r\n  popup.addEventListener('click', handlerCloseModal);\r\n  document.addEventListener('keydown', handlerCloseModal);\r\n};\r\n\r\n\r\n// Функция закрытия модального окна\r\nconst closePopup = (popup) => {\r\n  document.removeEventListener('keydown', handlerCloseModal);\r\n  popup.removeEventListener('click', handlerCloseModal);\r\n  popup.classList.remove('popup_is-opened');\r\n};\r\n\r\n\r\n// Объект экспорта\r\nexport const modal = {\r\n  open: openPopup,\r\n  close: closePopup\r\n}","\r\n\r\nconst showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n};\r\n\r\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n};\r\n\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n};\r\n\r\nconst clearValidation = (formElement, validationConfig) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationConfig)\r\n  });\r\n};\r\n\r\nconst enableValidation = (validationConfig) => {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener('submit', function (evt) {\r\n      evt.preventDefault();\r\n    });\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n};\r\n\r\n// Объект экспорта\r\nexport const validation = {\r\n  enable: enableValidation,\r\n  clear: clearValidation\r\n}","const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-24',\r\n  headers: {\r\n    authorization: '40811a44-55df-441d-9790-3adade90da82',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\n\r\nconst sendApiRequest = (path, method = 'GET', data = null) => {\r\n  const fetchConfig = {\r\n    method: method,\r\n    headers: config.headers\r\n  };\r\n  if (data) {\r\n    fetchConfig.body = JSON.stringify(data)\r\n  }\r\n\r\n  return fetch(config.baseUrl + path, fetchConfig)\r\n    .then(checkStatusRequest)\r\n};\r\n\r\n\r\nconst checkStatusRequest = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  } \r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\n\r\nconst checkMIMEType = (url) => {\r\n  return fetch(url, {method: 'HEAD'})\r\n    .then((res) => {\r\n      return res.headers.get('Content-Type').includes('image') && res.ok\r\n    })\r\n};\r\n\r\n\r\nexport const getUserData = () => {\r\n  return sendApiRequest('/users/me')\r\n};\r\n\r\nexport const getCardList = () => {\r\n  return sendApiRequest('/cards')\r\n};\r\n\r\nexport const changeProfileInfo = (name, about) => {\r\n  return sendApiRequest('/users/me', 'PATCH', {name, about});\r\n};\r\n\r\nexport const addNewCard = (name, link) => {\r\n  return sendApiRequest('/cards', 'POST', {name, link});\r\n};\r\n\r\nexport const deleteCard = (cardId) => {\r\n  return sendApiRequest(`/cards/${cardId}`, 'DELETE');\r\n};\r\n\r\nexport const setLikeCard = (cardId) => {\r\n  return sendApiRequest(`/cards/likes/${cardId}`, 'PUT');\r\n};\r\n\r\nexport const unsetLikeCard = (cardId) => {\r\n  return sendApiRequest(`/cards/likes/${cardId}`, 'DELETE');\r\n};\r\n\r\nexport const changeAvatar = (urlAvatar) => {\r\n  const body = {\r\n    avatar: urlAvatar\r\n  };\r\n  return checkMIMEType(urlAvatar)\r\n    .then((isImage) => {\r\n      if (isImage) {\r\n        return sendApiRequest(`/users/me/avatar`, 'PATCH', body);\r\n      }\r\n      return Promise.reject(`Ошибка: по ссылке нет картинки!`);\r\n    })\r\n};\r\n\r\n","import './pages/index.css';\r\nimport { config } from './scripts/config';\r\nimport { card } from './scripts/card';\r\nimport { modal } from './scripts/modal';\r\nimport { validation } from './scripts/validation';\r\nimport * as api from './scripts/api';\r\n\r\n\r\n// Функция открытия картинки карточки\r\nconst openImage = (link, name) => {\r\n  const popup = document.querySelector('.popup_type_image');\r\n  const imagePopup = popup.querySelector('.popup__image');\r\n  const titlePopup = popup.querySelector('.popup__caption');\r\n\r\n  imagePopup.src = link;\r\n  titlePopup.textContent = name;\r\n  modal.open(popup);\r\n};\r\n\r\n// Функция удаления карточки\r\nconst deleteCard = (deledeteButton, idCard) => {\r\n  api.deleteCard(idCard)\r\n  .then(() => {\r\n    card.delete(deledeteButton);\r\n  })\r\n\r\n};\r\n\r\n// функция лайка карточки\r\nconst likeCard = (evt, idCard) => {\r\n  const buttonElement = evt.target;\r\n  const isLiked = buttonElement.classList.contains('card__like-button_is-active');\r\n\r\n  if (isLiked) {\r\n    api.unsetLikeCard(idCard)\r\n      .then((cardData) => {\r\n        buttonElement.textContent = cardData.likes.length;\r\n      })\r\n  } else {\r\n    api.setLikeCard(idCard)\r\n      .then((cardData) => {\r\n        buttonElement.textContent = cardData.likes.length;\r\n      })\r\n  };\r\n\r\n  card.like(buttonElement);\r\n};\r\n\r\n\r\n// Обработчик открытия формы редактирования профиля\r\nfunction handlerOpenProfile() {\r\n  const form = config.profile.forms.editInfo;\r\n  const popup = config.profile.popups.editInfo;\r\n  const nameInput = config.profile.inputs.name;\r\n  const jobInput = config.profile.inputs.job;\r\n  const nameElement = config.profile.name;\r\n  const jobElement = config.profile.description;\r\n\r\n  validation.clear(form, config.validation);\r\n  nameInput.value = nameElement.textContent;\r\n  jobInput.value = jobElement.textContent;\r\n  modal.open(popup);\r\n};\r\n\r\n\r\n// Обработчик изменения профиля\r\nfunction handlerChangeProfile(evt) {\r\n  evt.preventDefault();\r\n\r\n  const popup = config.profile.popups.editInfo;\r\n  const nameInput = config.profile.inputs.name;\r\n  const jobInput = config.profile.inputs.job;\r\n  const nameElement = config.profile.name;\r\n  const jobElement = config.profile.description;\r\n  const buttonElement = evt.target.querySelector('.popup__button');\r\n\r\n  buttonElement.textContent = 'Сохранение...';\r\n  api.changeProfileInfo(nameInput.value, jobInput.value)\r\n    .then((userData) => {\r\n      nameElement.textContent = userData.name;\r\n      jobElement.textContent = userData.about;\r\n      buttonElement.textContent = 'Готово!';\r\n      setTimeout(() => {\r\n        modal.close(popup);\r\n      }, 1000)\r\n    })\r\n    .catch((err) => {\r\n      buttonElement.disabled = true;\r\n      buttonElement.textContent = err;\r\n    })\r\n    .finally(setTimeout(() => {\r\n        buttonElement.disabled = false;\r\n        buttonElement.textContent = 'Сохранить';\r\n      }, 3000)\r\n    )\r\n};\r\n\r\n\r\n// Обработчик открытия формы добавление карточки\r\nfunction handlerOpenFormCard() {\r\n  const popup = config.card.popup;\r\n\r\n  modal.open(popup);\r\n};\r\n\r\n\r\n// Обработчик добавление карточки\r\nfunction handlerAddCard(evt) {\r\n  evt.preventDefault();\r\n\r\n  const conteiner = config.card.conteiner;\r\n  const popup = config.card.popup;\r\n  const form = config.card.form;\r\n  const titleInput = config.card.inputs.name;\r\n  const urlInput = config.card.inputs.url;\r\n  const buttonElement = evt.target.querySelector('.popup__button');\r\n\r\n  buttonElement.textContent = 'Сохранение...';\r\n  api.addNewCard(titleInput.value, urlInput.value)\r\n    .then((cardData) => {\r\n      const cardElement = card.create(cardData, {deleteCard, likeCard, openImage});\r\n      conteiner.prepend(cardElement);\r\n      buttonElement.textContent = 'Готово!';\r\n      setTimeout(() => {\r\n        titleInput.value = '';\r\n        urlInput.value = '';\r\n        validation.clear(form, config.validation);\r\n        modal.close(popup);\r\n      }, 1000)\r\n    })\r\n    .catch((err) => {\r\n      buttonElement.disabled = true;\r\n      buttonElement.textContent = err;\r\n    })\r\n    .finally(setTimeout(() => {\r\n        buttonElement.disabled = false;\r\n        buttonElement.textContent = 'Сохранить';\r\n      }, 3000)\r\n    )\r\n};\r\n\r\n\r\n// Обработчик открытия формы смена аватара\r\nconst handlerOpenFormAvatar = () => {\r\n  const popup = config.profile.popups.changeAvatar;\r\n  const form = config.profile.forms.changeAvatar;\r\n  const urlInput = config.profile.inputs.urlAvatar;\r\n\r\n  urlInput.value = '';\r\n  validation.clear(form, config.validation);\r\n  modal.open(popup);\r\n};\r\n\r\n\r\n// Обработчик смены аватара\r\nconst handlerChangeAvatar = (evt) => {\r\n  evt.preventDefault();\r\n\r\n  const popup = config.profile.popups.changeAvatar;\r\n  const form = config.profile.forms.changeAvatar\r\n  const urlInput = config.profile.inputs.urlAvatar;\r\n  const avatarElement = config.profile.avatar;\r\n  const errorElement = form.querySelector(`.${urlInput.id}-error`);\r\n  const buttonElement = evt.target.querySelector('.popup__button');\r\n\r\n  buttonElement.textContent = 'Сохранение...';\r\n  api.changeAvatar(urlInput.value)\r\n    .then((data) => {\r\n    avatarElement.style = `background-image: url(${data.avatar})`;\r\n    buttonElement.textContent = 'Готово!';\r\n    setTimeout(() => {\r\n      modal.close(popup);\r\n    }, 1000)\r\n    })\r\n    .catch((err) => {\r\n      errorElement.textContent = err;\r\n    })\r\n    .finally(setTimeout(() => {\r\n        buttonElement.textContent = 'Сохранить';\r\n      }, 3000)\r\n    )\r\n};\r\n\r\n\r\n// Добавление слушателей\r\nconfig.profile.button.addEventListener('click', handlerOpenProfile);\r\nconfig.card.button.addEventListener('click', handlerOpenFormCard);\r\nconfig.profile.avatar.addEventListener('click', handlerOpenFormAvatar);\r\nconfig.profile.forms.editInfo.addEventListener('submit', handlerChangeProfile); \r\nconfig.card.form.addEventListener('submit', handlerAddCard);\r\nconfig.profile.forms.changeAvatar.addEventListener('submit', handlerChangeAvatar)\r\n \r\n\r\n\r\n// Включение валидации\r\nvalidation.enable(config.validation); \r\n\r\n\r\n// Функция загрузки данных на страницу\r\nconst initializationPage = () => {\r\n  const cardsConteiner = config.card.conteiner;\r\n  const nameProfileElement = config.profile.name;\r\n  const jobProfileElement = config.profile.description;\r\n  const avatarProfileElement = config.profile.avatar;\r\n  const cardFunctions = {\r\n    deleteCard: deleteCard,\r\n    likeCard: likeCard,\r\n    openImage: openImage\r\n  };\r\n\r\n  Promise.all([api.getUserData(), api.getCardList()])\r\n  .then(([userData, cardList]) => {\r\n    nameProfileElement.textContent = userData.name;\r\n    jobProfileElement.textContent = userData.about;\r\n    avatarProfileElement.style = `background-image: url(${userData.avatar})`;\r\n\r\n    cardList.forEach((cardData) => {\r\n      const cardElement = card.create(cardData, cardFunctions);\r\n\r\n      const likeButton = cardElement.querySelector('.card__like-button');\r\n      const hasLike = cardData.likes.some((likeUser) => {\r\n        return likeUser._id === userData._id;\r\n      });\r\n      if (hasLike) {\r\n        card.like(likeButton);\r\n      };\r\n\r\n      const isMyPost = cardData.owner._id === userData._id;\r\n      const delButton = cardElement.querySelector('.card__delete-button');\r\n\r\n      if (!isMyPost) {\r\n        delButton.remove();\r\n      }\r\n  \r\n      cardsConteiner.append(cardElement);\r\n    })\r\n  })\r\n};\r\n\r\ninitializationPage();"],"names":["config","profile","document","querySelector","forms","card","validation","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","cardTemplate","content","data","callbacks","cardElement","cloneNode","delButton","likeButton","image","title","src","link","textContent","name","likes","length","addEventListener","evt","deleteCard","_id","likeCard","openImage","element","classList","toggle","handlerCloseModal","openedPopup","isOverlay","target","contains","isBtnClose","isEscape","key","closePopup","stopPropagation","popup","removeEventListener","remove","modal","open","add","close","hideInputError","formElement","inputElement","validationConfig","errorElement","concat","id","toggleButtonState","inputList","buttonElement","some","validity","valid","hasInvalidInput","disabled","Array","from","querySelectorAll","forEach","baseUrl","headers","authorization","sendApiRequest","path","arguments","undefined","fetchConfig","method","body","JSON","stringify","fetch","then","checkStatusRequest","res","ok","json","Promise","reject","status","cardsConteiner","nameProfileElement","jobProfileElement","avatarProfileElement","cardFunctions","imagePopup","titlePopup","deledeteButton","idCard","cardId","closest","cardData","api","button","form","editInfo","popups","nameInput","inputs","jobInput","job","nameElement","jobElement","description","value","avatar","changeAvatar","urlAvatar","preventDefault","about","userData","setTimeout","catch","err","finally","conteiner","titleInput","urlInput","url","prepend","avatarElement","get","includes","isImage","style","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","all","_ref","_ref2","cardList","likeUser","isMyPost","owner","append"],"sourceRoot":""}