{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/config.js","webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["// DOM узлы\r\nconst profileElementList = {\r\n  'name' : document.querySelector('.profile__title'),\r\n  'description' : document.querySelector('.profile__description'),\r\n  'avatar' : document.querySelector('.profile__image'),\r\n  'button' : document.querySelector('.profile__edit-button'),\r\n  'popups' : {\r\n    'editInfo' : document.querySelector('.popup_type_edit'),\r\n    'changeAvatar' : document.querySelector('.popup_type_сhange-avatar')\r\n  },\r\n  'forms' : {\r\n    'editInfo' : document.forms['edit-profile'],\r\n    'changeAvatar' : document.forms['change-avatar']\r\n  },\r\n  'inputs' : {\r\n    'name' : document.querySelector('.popup__input_type_name'),\r\n    'job' : document.querySelector('.popup__input_type_description'),\r\n    'urlAvatar' : document.querySelector('.popup__input_type_url-avatar')\r\n  }\r\n};\r\nconst cardElementList = {\r\n  'conteiner' : document.querySelector('.places__list'),\r\n  'button' : document.querySelector('.profile__add-button'),\r\n  'popupNewCard' : document.querySelector('.popup_type_new-card'),\r\n  'popupImage' : {\r\n    'container' : document.querySelector('.popup_type_image'),\r\n    'image' : document.querySelector('.popup__image'),\r\n    'title' : document.querySelector('.popup__caption')\r\n  },\r\n  'form' : document.forms['new-place'], \r\n  'inputs' : {\r\n    'name' : document.querySelector('.popup__input_type_card-name'),\r\n    'url' : document.querySelector('.popup__input_type_url')\r\n  }\r\n};\r\n\r\n// Настройки валидации\r\nconst validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n};\r\n\r\n// Объект экспорта\r\nexport const config = {\r\n  profile: profileElementList,\r\n  card: cardElementList,\r\n  validation: validationConfig\r\n}","// Шаблон карточки\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\n\r\n// функция установки отображения карточки для заданного юзера\r\nexport const setStateCardForUser = (cardElement, cardData, userId) => {\r\n  const delButton = cardElement.querySelector('.card__delete-button');\r\n  const likeButton = cardElement.querySelector('.card__like-button');\r\n  const isMyPost = cardData.owner._id === userId;\r\n  const hasLike = cardData.likes.some((likeUser) => {\r\n    return likeUser._id === userId;\r\n  });\r\n\r\n  if (hasLike) {\r\n    likeCard(likeButton);\r\n  };\r\n\r\n  if (!isMyPost) {\r\n    delButton.remove();\r\n  }\r\n};\r\n\r\n\r\n// Функция создания карточки\r\nexport const createCard = (data, callbacks) => {\r\n  const cardElement = cardTemplate.querySelector('.card').cloneNode(true);\r\n  const delButton = cardElement.querySelector('.card__delete-button');\r\n  const likeButton = cardElement.querySelector('.card__like-button');\r\n  const image = cardElement.querySelector('.card__image');\r\n  const title = cardElement.querySelector('.card__title');\r\n\r\n  image.src = data.link;\r\n  image.alt = data.name;\r\n  title.textContent = data.name;\r\n  likeButton.textContent = data.likes.length;\r\n\r\n\r\n  delButton.addEventListener('click', (evt) => {\r\n    callbacks.deleteCard(evt, data._id)\r\n  });\r\n  likeButton.addEventListener('click', (evt) => {\r\n    callbacks.likeCard(evt, data._id);\r\n  });\r\n  image.addEventListener('click', () => {\r\n    callbacks.openImage(data.link, data.name);\r\n  });\r\n\r\n  return cardElement;\r\n};\r\n\r\n\r\n// Функция удаления карточки\r\nexport const deleteCard = (evt) => {\r\n  const cardItem = evt.target.closest('.card');\r\n  cardItem.remove();\r\n};\r\n\r\n\r\n// Функция лайка карточки\r\nexport const likeCard = (element) => {\r\n  element.classList.toggle('card__like-button_is-active');\r\n};\r\n\r\n// Функция проверки на наличие лайка\r\nexport const isLiked = (buttonElement) => {\r\n return buttonElement.classList.contains('card__like-button_is-active');\r\n};\r\n\r\n\r\n// Функция установки счетчика лайков\r\nexport const setLikeCount = (buttonElement, count) => {\r\n  buttonElement.textContent = count;\r\n};\r\n\r\n","// Функция обработчик закрытия модального окна \r\nconst handlerCloseModal = (evt, popup) => {\r\n  const isOverlay = evt.target.classList.contains('popup');\r\n  const isBtnClose = evt.target.classList.contains('popup__close');\r\n\r\n  if (isOverlay || isBtnClose) {\r\n    closePopup(popup);\r\n  } else {\r\n    evt.stopPropagation();\r\n  };\r\n};\r\n\r\n\r\n// Функция закрытия модального окна по ESC\r\nconst closeByEsc = (evt) => {\r\n  const isEscape = evt.key === 'Escape';\r\n\r\n  if (isEscape) {\r\n    const openedPopup = document.querySelector('.popup_is-opened');\r\n    closePopup(openedPopup);\r\n  }\r\n};\r\n\r\n\r\n// Функция открытия модального окна\r\nexport const openPopup = (popup) => {\r\n  document.addEventListener('keydown', closeByEsc);\r\n  popup.addEventListener('click', (evt) => {\r\n    handlerCloseModal(evt, popup)\r\n  });\r\n  popup.classList.add('popup_is-opened');\r\n};\r\n\r\n\r\n// Функция закрытия модального окна\r\nexport const closePopup = (popup) => {\r\n  document.removeEventListener('keydown', closeByEsc);\r\n  popup.removeEventListener('click', (evt) => {\r\n    handlerCloseModal(evt, popup)\r\n  });\r\n  popup.classList.remove('popup_is-opened');\r\n};\r\n","\r\n\r\nconst showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n};\r\n\r\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n};\r\n\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n};\r\n\r\nexport const clearValidation = (formElement, validationConfig) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationConfig)\r\n  });\r\n};\r\n\r\nexport const enableValidation = (validationConfig) => {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n};\r\n","const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-24',\r\n  headers: {\r\n    authorization: '40811a44-55df-441d-9790-3adade90da82',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\n\r\nconst sendApiRequest = (path, method = 'GET', data = null) => {\r\n  const fetchConfig = {\r\n    method: method,\r\n    headers: config.headers\r\n  };\r\n  if (data) {\r\n    fetchConfig.body = JSON.stringify(data)\r\n  }\r\n\r\n  return fetch(config.baseUrl + path, fetchConfig)\r\n    .then(checkStatusRequest)\r\n};\r\n\r\n\r\nconst checkStatusRequest = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  } \r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\n\r\nconst checkMIMEType = (url) => {\r\n  return fetch(url, {method: 'HEAD'})\r\n    .then((res) => {\r\n      return res.headers.get('Content-Type').includes('image') && res.ok\r\n    })\r\n};\r\n\r\n\r\nexport const getUserData = () => {\r\n  return sendApiRequest('/users/me')\r\n};\r\n\r\nexport const getCardList = () => {\r\n  return sendApiRequest('/cards')\r\n};\r\n\r\nexport const changeProfileInfo = (name, about) => {\r\n  return sendApiRequest('/users/me', 'PATCH', {name, about});\r\n};\r\n\r\nexport const addNewCard = (name, link) => {\r\n  return sendApiRequest('/cards', 'POST', {name, link});\r\n};\r\n\r\nexport const deleteCard = (cardId) => {\r\n  return sendApiRequest(`/cards/${cardId}`, 'DELETE');\r\n};\r\n\r\nexport const setLikeCard = (cardId) => {\r\n  return sendApiRequest(`/cards/likes/${cardId}`, 'PUT');\r\n};\r\n\r\nexport const unsetLikeCard = (cardId) => {\r\n  return sendApiRequest(`/cards/likes/${cardId}`, 'DELETE');\r\n};\r\n\r\nexport const changeAvatar = (urlAvatar) => {\r\n  const body = {\r\n    avatar: urlAvatar\r\n  };\r\n  return checkMIMEType(urlAvatar)\r\n    .then((isImage) => {\r\n      if (isImage) {\r\n        return sendApiRequest(`/users/me/avatar`, 'PATCH', body);\r\n      }\r\n      return Promise.reject(`Ошибка: по ссылке нет картинки!`);\r\n    })\r\n};\r\n\r\n","import './pages/index.css';\r\nimport { config } from './scripts/config';\r\nimport * as card from './scripts/card';\r\nimport * as modal from './scripts/modal';\r\nimport * as validation from './scripts/validation';\r\nimport * as api from './scripts/api';\r\n\r\n\r\n// Функция открытия картинки карточки\r\nconst openImage = (link, name) => {\r\n  config.card.popupImage.image.src = link;\r\n  config.card.popupImage.image.alt = name;\r\n  config.card.popupImage.title.textContent = name;\r\n\r\n  modal.openPopup(config.card.popupImage.container);\r\n};\r\n\r\n// Функция удаления карточки\r\nconst deleteCard = (deledeteButton, idCard) => {\r\n  api.deleteCard(idCard)\r\n  .then(() => {\r\n    card.deleteCard(deledeteButton);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err)\r\n  })\r\n};\r\n\r\n// функция лайка карточки\r\nconst likeCard = (evt, idCard) => {\r\n  const buttonElement = evt.target;\r\n\r\n  if (card.isLiked(buttonElement)) {\r\n    api.unsetLikeCard(idCard)\r\n      .then((cardData) => {\r\n        card.setLikeCount(buttonElement, cardData.likes.length);\r\n        card.likeCard(buttonElement);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  } else {\r\n    api.setLikeCard(idCard)\r\n      .then((cardData) => {\r\n        card.setLikeCount(buttonElement, cardData.likes.length);\r\n        card.likeCard(buttonElement);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  };\r\n};\r\n\r\n\r\n// Обработчик открытия формы редактирования профиля\r\nfunction handlerOpenProfile() {\r\n  validation.clearValidation(config.profile.forms.editInfo, config.validation);\r\n  config.profile.inputs.name.value = config.profile.name.textContent;\r\n  config.profile.inputs.job.value = config.profile.description.textContent;\r\n  modal.openPopup(config.profile.popups.editInfo);\r\n};\r\n\r\n\r\n// Обработчик изменения профиля\r\nfunction handlerChangeProfile(evt) {\r\n  evt.preventDefault();\r\n\r\n  const buttonElement = evt.submitter;\r\n  buttonElement.textContent = 'Сохранение...';\r\n  buttonElement.disabled = true;\r\n  api.changeProfileInfo(config.profile.inputs.name.value, config.profile.inputs.job.value)\r\n    .then((userData) => {\r\n      config.profile.name.textContent = userData.name;\r\n      config.profile.description.textContent = userData.about;\r\n\r\n      modal.closePopup(config.profile.popups.editInfo);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n    .finally(() => {\r\n        buttonElement.disabled = false;\r\n        buttonElement.textContent = 'Сохранить';\r\n      }\r\n    )\r\n};\r\n\r\n\r\n// Обработчик открытия формы добавление карточки\r\nfunction handlerOpenFormCard() {\r\n  validation.clearValidation(config.card.form, config.validation)\r\n  modal.openPopup(config.card.popupNewCard);\r\n};\r\n\r\n\r\n// Обработчик добавление карточки\r\nfunction handlerAddCard(evt) {\r\n  evt.preventDefault();\r\n\r\n  const buttonElement = evt.submitter;\r\n  buttonElement.textContent = 'Сохранение...';\r\n  buttonElement.disabled = true;\r\n  api.addNewCard(config.card.inputs.name.value, config.card.inputs.url.value)\r\n    .then((cardData) => {\r\n      const cardElement = card.createCard(cardData, {deleteCard, likeCard, openImage});\r\n      config.card.conteiner.prepend(cardElement);\r\n      config.card.inputs.name.value = '';\r\n      config.card.inputs.url.value = '';\r\n      modal.closePopup(config.card.popupNewCard);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n    .finally(() => {\r\n      buttonElement.disabled = false;\r\n      buttonElement.textContent = 'Сохранить';\r\n    }\r\n  ) \r\n};\r\n\r\n\r\n// Обработчик открытия формы смена аватара\r\nconst handlerOpenFormAvatar = () => {\r\n  config.profile.inputs.urlAvatar.value = '';\r\n  validation.clearValidation(config.profile.forms.changeAvatar, config.validation);\r\n  modal.openPopup(config.profile.popups.changeAvatar);\r\n};\r\n\r\n\r\n// Обработчик смены аватара\r\nconst handlerChangeAvatar = (evt) => {\r\n  evt.preventDefault();\r\n\r\n  const buttonElement = evt.submitter;\r\n  buttonElement.textContent = 'Сохранение...';\r\n  buttonElement.disabled = true;\r\n  api.changeAvatar(config.profile.inputs.urlAvatar.value)\r\n    .then((data) => {\r\n      config.profile.avatar.style = `background-image: url(${data.avatar})`;\r\n      modal.closePopup(config.profile.popups.changeAvatar);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n    .finally(() => {\r\n      buttonElement.disabled = false;\r\n      buttonElement.textContent = 'Сохранить';\r\n    }\r\n  )\r\n};\r\n\r\n\r\n// Добавление слушателей\r\nconfig.profile.button.addEventListener('click', handlerOpenProfile);\r\nconfig.card.button.addEventListener('click', handlerOpenFormCard);\r\nconfig.profile.avatar.addEventListener('click', handlerOpenFormAvatar);\r\nconfig.profile.forms.editInfo.addEventListener('submit', handlerChangeProfile); \r\nconfig.card.form.addEventListener('submit', handlerAddCard);\r\nconfig.profile.forms.changeAvatar.addEventListener('submit', handlerChangeAvatar)\r\n \r\n\r\n\r\n// Включение валидации\r\nvalidation.enableValidation(config.validation); \r\n\r\n\r\n// Функция загрузки данных на страницу\r\nconst initializationPage = () => {\r\n  Promise.all([api.getUserData(), api.getCardList()])\r\n  .then(([userData, cardList]) => {\r\n    config.profile.name.textContent = userData.name;\r\n    config.profile.description.textContent = userData.about;\r\n    config.profile.avatar.style = `background-image: url(${userData.avatar})`;\r\n\r\n    cardList.forEach((cardData) => {\r\n      const cardElement = card.createCard(cardData, {deleteCard, likeCard, openImage});\r\n      card.setStateCardForUser(cardElement, cardData, userData._id); \r\n      config.card.conteiner.append(cardElement);\r\n    })\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  })\r\n};\r\n\r\ninitializationPage();"],"names":["config","profile","document","querySelector","forms","card","validation","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","cardTemplate","content","createCard","data","callbacks","cardElement","cloneNode","delButton","likeButton","image","title","src","link","alt","name","textContent","likes","length","addEventListener","evt","deleteCard","_id","likeCard","openImage","element","classList","toggle","setLikeCount","buttonElement","count","handlerCloseModal","popup","isOverlay","target","contains","isBtnClose","closePopup","stopPropagation","closeByEsc","key","openedPopup","openPopup","add","removeEventListener","remove","hideInputError","formElement","inputElement","validationConfig","errorElement","concat","id","toggleButtonState","inputList","some","validity","valid","hasInvalidInput","disabled","clearValidation","Array","from","querySelectorAll","forEach","baseUrl","headers","authorization","sendApiRequest","path","arguments","undefined","fetchConfig","method","body","JSON","stringify","fetch","then","checkStatusRequest","res","ok","json","Promise","reject","status","popupImage","modal","container","deledeteButton","idCard","cardId","closest","catch","err","console","log","api","cardData","button","editInfo","inputs","value","job","description","popups","form","popupNewCard","avatar","urlAvatar","changeAvatar","preventDefault","about","submitter","userData","finally","url","conteiner","prepend","get","includes","isImage","style","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","all","_ref","_ref2","cardList","userId","isMyPost","owner","likeUser","append"],"sourceRoot":""}